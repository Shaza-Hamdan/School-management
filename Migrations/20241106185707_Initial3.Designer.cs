// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRIAL.Persistence.Repository;

#nullable disable

namespace Tutorial.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20241106185707_Initial3")]
    partial class Initial3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TRIAL.Persistence.entity.EmailVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("emailVerification");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("DATETIME");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("HomeworkTId")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeworkTId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("HwS");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Discription");

                    b.Property<string>("Homework")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("subjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("subjectsId");

                    b.ToTable("HwT");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Marks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Oral")
                        .HasColumnType("int")
                        .HasColumnName("Oral Mark");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<int>("Written")
                        .HasColumnType("int")
                        .HasColumnName("Written Mark");

                    b.Property<int>("subjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("subjectsId");

                    b.ToTable("marks");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ResetTokenExpiration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("registrations");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Subjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId")
                        .IsUnique();

                    b.ToTable("subjectNa");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkStudent", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.HomeworkTeacher", "HomeworkT")
                        .WithMany("HomeworkStudent")
                        .HasForeignKey("HomeworkTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRIAL.Persistence.entity.Registration", "Registration")
                        .WithMany("homeworkTs")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeworkT");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkTeacher", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.Subjects", "subjects")
                        .WithMany("homeworkTs")
                        .HasForeignKey("subjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Marks", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.Registration", "Registration")
                        .WithMany("subject")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRIAL.Persistence.entity.Subjects", "subjects")
                        .WithMany("marks")
                        .HasForeignKey("subjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Subjects", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.Registration", "Registration")
                        .WithOne("subjects")
                        .HasForeignKey("TRIAL.Persistence.entity.Subjects", "RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkTeacher", b =>
                {
                    b.Navigation("HomeworkStudent");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Registration", b =>
                {
                    b.Navigation("homeworkTs");

                    b.Navigation("subject");

                    b.Navigation("subjects")
                        .IsRequired();
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Subjects", b =>
                {
                    b.Navigation("homeworkTs");

                    b.Navigation("marks");
                });
#pragma warning restore 612, 618
        }
    }
}

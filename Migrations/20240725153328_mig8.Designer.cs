// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRIAL.Persistence.Repository;

#nullable disable

namespace Tutorial.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240725153328_mig8")]
    partial class mig8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Homework")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("homeworkTId")
                        .HasColumnType("int");

                    b.Property<int>("perInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("homeworkTId");

                    b.HasIndex("perInfoId");

                    b.ToTable("HwS");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("Deadline");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Discription");

                    b.Property<string>("Homework")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("subjectsId");

                    b.ToTable("HwT");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Marks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Oral")
                        .HasColumnType("int")
                        .HasColumnName("Oral Mark");

                    b.Property<int>("Written")
                        .HasColumnType("int")
                        .HasColumnName("Written Mark");

                    b.Property<int>("perInfoID")
                        .HasColumnType("int");

                    b.Property<int>("subjectsID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("perInfoID");

                    b.HasIndex("subjectsID");

                    b.ToTable("marks");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.PerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Person")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PersonalNum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Person_Information");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("registrations");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Subjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("perInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("perInfoId")
                        .IsUnique();

                    b.ToTable("subjectNa");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkS", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.HomeworkT", "homeworkT")
                        .WithMany("perInfos")
                        .HasForeignKey("homeworkTId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRIAL.Persistence.entity.PerInfo", "perInfo")
                        .WithMany("homeworkTs")
                        .HasForeignKey("perInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("homeworkT");

                    b.Navigation("perInfo");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkT", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.Subjects", "subjects")
                        .WithMany("homeworkTs")
                        .HasForeignKey("subjectsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Marks", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.PerInfo", "perInfo")
                        .WithMany("subject")
                        .HasForeignKey("perInfoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRIAL.Persistence.entity.Subjects", "subjects")
                        .WithMany("marks")
                        .HasForeignKey("subjectsID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("perInfo");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Subjects", b =>
                {
                    b.HasOne("TRIAL.Persistence.entity.PerInfo", "perInfo")
                        .WithOne("subjects")
                        .HasForeignKey("TRIAL.Persistence.entity.Subjects", "perInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("perInfo");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.HomeworkT", b =>
                {
                    b.Navigation("perInfos");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.PerInfo", b =>
                {
                    b.Navigation("homeworkTs");

                    b.Navigation("subject");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("TRIAL.Persistence.entity.Subjects", b =>
                {
                    b.Navigation("homeworkTs");

                    b.Navigation("marks");
                });
#pragma warning restore 612, 618
        }
    }
}
